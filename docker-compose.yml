version: "3"
services:
  mongo:
    image: "mongo"
    expose:
      - "${DATABASE_PORT}"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    networks:
      - "cashbackBoticario"
    volumes:
      - "./db:/data/db"
    entrypoint:
      - "/usr/bin/mongod"
      - "--bind_ip_all"
      - "--port"
      - "${DATABASE_PORT}"
  node:
    build: "./backend"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
      - "${SERVER_DEBUG_PORT}:${SERVER_DEBUG_PORT}"
    networks:
      - "cashbackBoticario"
    volumes:
      - "./backend:/data/backend"
    depends_on:
      - "mongo"
    environment:
      - "DATABASE_URL=mongo:${DATABASE_PORT}"
      - "DATABASE_NAME=${DATABASE_NAME}"
      - "SERVER_PORT=${SERVER_PORT}"
      - "DEBUG_PORT=${SERVER_DEBUG_PORT}"
      - "DEBUG_TAG=${DEBUG_TAG}"
      - "RUN_MODE=${SERVER_MODE}"
      - "NODE_ENV=${NODE_ENV}"
      - "APP_JWT_SECRET=$APP_JWT_SECRET"
      - "JWT_EXPIRATION=$JWT_EXPIRATION"
      - "VALIDATE_CPF=$VALIDATE_CPF"
      - "STRONG_PASSWORD=$STRONG_PASSWORD"
      - "SPECIAL_CPF=$SPECIAL_CPF"
      - "CASHBACK_API_URL=$CASHBACK_API_URL"
      - "CASHBACK_API_TOKEN=$CASHBACK_API_TOKEN"
  react:
    stdin_open: true
    build:
      context: "./frontend"
      dockerfile: "${FRONTEND_DOCKERFILE}"
      args:
        - "SERVER_PORT=${SERVER_PORT}"
        - "NETWORK_GATEWAY=${NETWORK_GATEWAY}"
    ports:
      - "${FRONTEND_PORT_SOCKET}:${FRONTEND_PORT_SOCKET}"
      - "${FRONTEND_PORT_DEV}:${FRONTEND_PORT_DEV}"
      - "${FRONTEND_PORT_PROD}:${FRONTEND_PORT_PROD}"
    networks:
      - "cashbackBoticario"
    volumes:
      - "./frontend:/data/frontend"
    depends_on:
      - "node"
    environment:
      - "SERVER_PORT=${SERVER_PORT}"
      - "NETWORK_GATEWAY=${NETWORK_GATEWAY}"
      - "FRONTEND_PORT_DEV=${FRONTEND_PORT_DEV}"
      - "FRONTEND_PORT_PROD=${FRONTEND_PORT_PROD}"
  seed:
    build: "./db_seed"
    volumes:
      - "./db_seed:/data/seed"
    networks:
      - "cashbackBoticario"
    depends_on:
      - "node"
    command: sh -c 'while ! nc -z mongo ${DATABASE_PORT}; do sleep 1; done; seed'
    environment:
      - "DB_HOST=mongo"
      - "DB_PORT=${DATABASE_PORT}"
      - "DB_NAME=${DATABASE_NAME}"
      - "DROP_DATABASE=${DATABASE_SEED_DROP_DB}"
      - "DROP_COLLECTIONS=${DATABASE_SEED_DROP_COLLECTION}"
      - "REPLACE_ID=true"    
networks:
  cashbackBoticario:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_GATEWAY}/16
